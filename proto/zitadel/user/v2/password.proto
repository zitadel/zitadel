syntax = "proto3";

package zitadel.user.v2;

option go_package = "github.com/zitadel/zitadel/pkg/grpc/user/v2;user";

import "google/api/field_behavior.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "validate/validate.proto";

message Password {
  string password = 1 [
    (validate.rules).string = {min_len: 1, max_len: 200},
    (google.api.field_behavior) = REQUIRED,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      example: "\"Secr3tP4ssw0rd!\"";
      min_length: 1,
      max_length: 200;
    }
  ];
  bool change_required = 2;
}

message HashedPassword {
  string hash = 1 [
    (validate.rules).string = {min_len: 1, max_len: 200},
    (google.api.field_behavior) = REQUIRED,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      example: "\"$2a$12$lJ08fqVr8bFJilRVnDT9QeULI7YW.nT3iwUv6dyg0aCrfm3UY8XR2\"";
      description: "\"Encoded hash of a password in Modular Crypt Format: https://zitadel.com/docs/concepts/architecture/secrets#hashed-secrets\"";
      min_length: 1,
      max_length: 200;
    }
  ];
  bool change_required = 2;
}

message SendPasswordResetLink {
  NotificationType notification_type = 1;
  // Optionally set a url_template, which will be used in the password reset mail sent by ZITADEL to guide the user to your password change page.
  // If no template is set, the default ZITADEL url will be used.
  //
  // The following placeholders can be used: UserID, OrgID, Code
  optional string url_template = 2 [
    (validate.rules).string = {min_len: 1, max_len: 200},
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      min_length: 1;
      max_length: 200;
      example: "\"https://example.com/password/changey?userID={{.UserID}}&code={{.Code}}&orgID={{.OrgID}}\"";
    }
  ];
}

message ReturnPasswordResetCode {}

enum NotificationType {
  NOTIFICATION_TYPE_Unspecified = 0;
  NOTIFICATION_TYPE_Email = 1;
  NOTIFICATION_TYPE_SMS = 2;
}

message SetPassword {
  oneof password_type {
    Password password = 1;
    HashedPassword hashed_password = 2;
  }
  oneof verification {
    string current_password = 3 [
      (validate.rules).string = {min_len: 1, max_len: 200},
      (google.api.field_behavior) = REQUIRED,
      (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        min_length: 1;
        max_length: 200;
        example: "\"Secr3tP4ssw0rd!\"";
      }
    ];
    string verification_code = 4 [
      (validate.rules).string = {min_len: 1, max_len: 20},
      (google.api.field_behavior) = REQUIRED,
      (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        min_length: 1;
        max_length: 20;
        example: "\"SKJd342k\"";
        description: "\"the verification code generated during password reset request\"";
      }
    ];
  }
}