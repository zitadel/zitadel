syntax = "proto3";

package zitadel.user.v2;

option go_package = "github.com/zitadel/zitadel/pkg/grpc/user/v2;user";

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "validate/validate.proto";

message SetHumanEmail {
  // The email address of the user.
  // As long as the email is not verified, the user will not be able to login.
  // Fore example "mini@mouse.com"
  string email = 1 [
    (validate.rules).string = {min_len: 1, max_len: 200, email: true}
  ];
  // if no verification is specified, an email is sent with the default url
  oneof verification {
    // Use send_code if Zitadel should send a verification email to the user.
    SendEmailVerificationCode send_code = 2;
    // Use return_code if you want to send the verification email to the user yourself.
    ReturnEmailVerificationCode return_code = 3;
    // If the user should not receive a verification email at all, set is_verified to true.
    // This is useful...
    // - ...in migration scenarios, where the user has their email already verified, for example in another Zitadel instance.
    // - ...if no valid and active SMTP provider configuration is available for the Zitadel instance, for example in development or test instances.
    bool is_verified = 4 [
      (validate.rules).bool.const = true
    ];
  }
}

message HumanEmail {
  string email = 1 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      min_length: 1;
      max_length: 200;
      example: "\"mini@mouse.com\"";
    }
  ];
  bool is_verified = 2;
}

message SendEmailVerificationCode {
  // Optionally set a url_template, which will be used in the verification mail sent by ZITADEL to guide the user to your verification page.
  // If no template is set, the default Zitadel URL will be used.
  //
  // The following placeholders can be used: UserID, OrgID, Code
  // For example https://example.com/email/verify?userID={{.UserID}}&code={{.Code}}&orgID={{.OrgID}}
  optional string url_template = 1 [
    (validate.rules).string = {max_len: 200}
  ];
}

message ReturnEmailVerificationCode {}

