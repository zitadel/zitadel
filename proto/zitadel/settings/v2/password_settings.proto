syntax = "proto3";

package zitadel.settings.v2;

option go_package = "github.com/zitadel/zitadel/pkg/grpc/settings/v2;settings";

import "protoc-gen-openapiv2/options/annotations.proto";
import "zitadel/settings/v2/settings.proto";

message PasswordComplexitySettings {
  // The minimum length a password must have.
  uint64 min_length = 1 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      example: "\"8\""
    }
  ];

  // Defines if the password MUST contain an upper case letter.
  bool requires_uppercase = 2;

  // Defines if the password MUST contain a lowercase letter.
  bool requires_lowercase = 3;

  // Defines if the password MUST contain a number.
  bool requires_number = 4;

  // Defines if the password MUST contain a symbol or special character. E.g. "$"
  bool requires_symbol = 5;

  // ResourceOwnerType returns if the settings is managed on the organization explicitly or
  // fell back on the instance settings.
  ResourceOwnerType resource_owner_type = 6;
}

message PasswordExpirySettings {
  // Amount of days after which a password will expire. The user will be forced to change the password on the following authentication.
  uint64 max_age_days = 1 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      example: "\"365\""
    }
  ];

  // Amount of days after which the user should be notified of the upcoming expiry. ZITADEL will not notify the user.
  uint64 expire_warn_days = 2 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      example: "\"10\""
    }
  ];

  // ResourceOwnerType returns if the settings is managed on the organization explicitly or
  // fail back on the instance settings.
  ResourceOwnerType resource_owner_type = 3;
}
