name: Check

on: 
  workflow_call: 
    inputs:
      nx_version:
        required: true
        type: string
    secrets:
      CODECOV_TOKEN:
        required: true

env:
  nx_cache_path: .nx

jobs:
  check:
    name: check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          filter: tree:0
      - name: Fetch main branch
        run: git fetch origin main:main
      - name: Set up pnpm
        uses: pnpm/action-setup@v4
      - name: Install dependencies
        run: pnpm install --frozen-lockfile --dev        
      - name: Install Nx
        run: pnpm add --global nx@${{ inputs.nx_version }}
      - uses: nrwl/nx-set-shas@v4
      - run: nx start-ci-run --distribute-on="3 linux-medium-js" --stop-agents-after=lint,build,test-unit,test-integration-build
      - name: Run Quality Checks on Affected Projects
        run: nx affected --targets lint build test-unit test-integration-build --exclude @zitadel/docs,@zitadel/benchmark,@zitadel/login-api-mock
      - run: npx nx fix-ci
        if: always()
      - name: publish coverage
        uses: codecov/codecov-action@v4.3.0
        with:
          file: profile.api.test-unit.cov
          name: api-test-unit
          flags: api-test-unit
          token: ${{ secrets.CODECOV_TOKEN }}

  docker:
    name: docker
    # We run these tests after check so we can reuse its cache
    needs: check
    strategy:
      matrix:
        target:
          - test-integration-login
          - test-integration-api
          - test-firefox
          - test-chrome
    runs-on:
      group: zitadel-public
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          filter: tree:0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: v0.28.0
      - name: Set up Docker Compose
        uses: docker/setup-compose-action@v1
        with:
          version: v2.38.2
      - name: Install dependencies
        run: pnpm install --frozen-lockfile --dev
      - name: Install global modules
        run: pnpm add --global nx@${{ inputs.nx_version }}
      - name: Install Cypress binary
        if: matrix.target == 'test-integration-login' || matrix.target == 'test-firefox' || matrix.target == 'test-chrome'
        run: pnpm cypress install
        working-directory: apps/login
      - name: Run ${{ matrix.target }}
        run: nx affected --targets=${{ matrix.target }}
      - run: npx nx fix-ci
        if: always()
      - if: matrix.target == 'test-integration-api'
        name: publish coverage
        uses: codecov/codecov-action@v4.3.0
        with:
          file: profile.api.test-integration.cov
          name: api-test-integration
          flags: api-test-integration
          token: ${{ secrets.CODECOV_TOKEN }}
      - uses: actions/upload-artifact@v4
        if: (matrix.target == 'test-firefox' || matrix.target == 'test-chrome') && (failure() || cancelled())
        with:
          name: functional-ui-tests
          path: |
            tests/functional-ui/cypress/screenshots/${{ matrix.target == 'test-firefox' && 'firefox' || 'chrome' }}
            tests/functional-ui/cypress/videos/${{ matrix.target == 'test-firefox' && 'firefox' || 'chrome' }}
            tests/functional-ui/cypress/results/${{ matrix.target == 'test-firefox' && 'firefox' || 'chrome' }}
      - name: upload race logs
        if: matrix.target == 'test-integration-api' && (failure() || cancelled())
        uses: actions/upload-artifact@v4
        with:
          name: api-integration-test-race-logs
          path: |
           .artifacts/api-test-integration/race.log.*

