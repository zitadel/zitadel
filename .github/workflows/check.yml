name: Check

on: 
  workflow_call: 
    inputs:
      node_version:
        required: true
        type: string
    secrets:
      CODECOV_TOKEN:
        required: true

env:
  nx_cache_path: .nx

jobs:
  lint_build_test:
    name: Lint, Build and Test
    runs-on:
      group: zitadel-public
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          filter: tree:0
      - name: Fetch main branch
        run: git fetch origin main:main
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
      - name: Set up pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node_version }}
          cache: "pnpm"
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: v0.28.0
      - name: Set up Docker Compose
        uses: docker/setup-compose-action@v1
        with:
          version: v2.38.2
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Install Cypress binary
        run: pnpm cypress install
        working-directory: apps/login
      - name: Set SHAs for nx affected commands
        uses: nrwl/nx-set-shas@v4
      - name: Restore Nx cache
        uses: actions/cache/restore@v4
        # We use a local cache temporarily, until we use remote shared caching.
        # We need this because some quality checks are flaky and have to be retryable to keep the failure rates low.
        id: nx_cache
        with:
          path: ${{ env.nx_cache_path }}
          # It includes the repository owner to prevent cache poisoning from forks.
          # We restore caches from previous commits on the HEAD branch, then we fall back to caches from the base.
          key: nx-${{ github.event.pull_request.base.ref || github.ref_name }}-${{ github.head_ref || github.ref_name }}-${{ github.repository_owner }}-${{ github.sha }}
          enableCrossOsArchive: true
          restore-keys: |
            nx-${{ github.event.pull_request.base.ref || github.ref_name }}-${{ github.head_ref || github.ref_name }}-${{ github.repository_owner }}-
            nx-${{ github.event.pull_request.base.ref || github.ref_name }}-${{ github.head_ref || github.ref_name }}-
            nx-${{ github.event.pull_request.base.ref || github.ref_name }}-
      - name: Lint
        run: pnpm nx affected --nxBail --targets lint
      - name: Build
        run: pnpm nx affected --nxBail --targets build --exclude @zitadel/docs,@zitadel/benchmark
      - name: Test Unit
        run: pnpm nx affected --nxBail --targets test-unit
      - name: Test Integration Login
        run: pnpm nx affected --nxBail --targets test-integration --exclude @zitadel/api
      - name: Test Integration API
        run: pnpm nx affected --nxBail --targets test-integration --exclude @zitadel/login
      - name: Test Functional UI Firefox
        run: pnpm nx affected --nxBail --targets test-firefox
      - name: Test Functional UI Chrome
        run: pnpm nx affected --nxBail --targets test-chrome
      - run: Always Write the New Nx Cache
        uses: actions/cache/save@v4
        if: always()
        with:
          key: ${{ steps.nx_cache.outputs.cache-primary-key }}
          path: ${{ env.nx_cache_path }}
      - name: Publish API Unit Test Coverage
        uses: codecov/codecov-action@v4.3.0
        with:
          file: profile.api.test-unit.cov
          name: api-test-unit
          flags: api-test-unit
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Publish API Integration Test Coverage
        uses: codecov/codecov-action@v4.3.0
        with:
          file: profile.api.test-integration.cov
          name: api-test-integration
          flags: api-test-integration
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Upload API Integration Test Race Logs
        if: failure() || cancelled()
        uses: actions/upload-artifact@v4
        with:
          name: api-integration-test-race-logs
          path: |
           .artifacts/api-test-integration/race.log.*
      - name: Upload Functional UI Test Artifacts
        uses: actions/upload-artifact@v4
        if: failure() || cancelled()
        with:
          name: functional-ui-tests
          path: |
            tests/functional-ui/cypress/screenshots
            tests/functional-ui/cypress/videos
            tests/functional-ui/cypress/results
