name: Check

on: 
  workflow_call: 
    inputs:
      node_version:
        required: true
        type: string
    outputs:
      nx_cache_key:
        value: ${{ jobs.check.outputs.nx_cache_key }}
      nx_cache_path:
        value: ${{ jobs.check.outputs.nx_cache_path }}
    secrets:
      CODECOV_TOKEN:
        required: true

env:
  nx_cache_path: .nx

jobs:
  check:
    name: check
    runs-on:
      group: zitadel-public
    outputs:
      nx_cache_key: ${{ steps.nx_cache.outputs.cache-primary-key }}
      nx_cache_path: ${{ env.nx_cache_path }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
      - name: Set up pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node_version }}
          cache: "pnpm"
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Restore Nx cache
        uses: actions/cache/restore@v4
        id: nx_cache
        with:
          path: ${{ env.nx_cache_path }}
          # This key makes sure that every commit gets its own cache key
          # As github.sha points to a virtual merge commit on PRs, we use the PR branches HEAD SHA first.
          # It includes the repository owner to prevent cache poisoning from forks.
          # We restore caches from previous commits on the HEAD branch, then we fall back to caches from the base.
          key: nx-${{ github.event.pull_request.base.ref || github.ref_name }}-${{ github.head_ref || github.ref_name }}-${{ github.repository_owner }}-${{ github.event.pull_request.head.sha || github.sha }}
          enableCrossOsArchive: true
          restore-keys: |
            nx-${{ github.event.pull_request.base.ref || github.ref_name }}-${{ github.head_ref || github.ref_name }}-${{ github.repository_owner }}-
            nx-${{ github.event.pull_request.base.ref || github.ref_name }}-${{ github.head_ref || github.ref_name }}-
            nx-${{ github.event.pull_request.base.ref || github.ref_name }}-
      - name: Install global modules
        run: pnpm add -g nx sass
      - name: Install Cypress binary
        run: pnpm cypress install
        working-directory: apps/login
      - uses: nrwl/nx-set-shas@v4
      - name: Lint, Build, Unit Tests
        run: nx affected --targets lint build test-unit test-integration --exclude @zitadel/docs,@zitadel/benchmark
      - uses: actions/cache/save@v4
        if: always()
        with:
          key: ${{ steps.nx_cache.outputs.cache-primary-key }}
          path: ${{ env.nx_cache_path }}
      - name: upload race logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: integration-test-race-logs
          path: |
           .artifacts/api-test-integration/race.log.*
      - name: publish coverage
        uses: codecov/codecov-action@v4.3.0
        with:
          file: profile.api.test-unit.cov
          name: api-test-unit
          flags: api-test-unit
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: publish coverage
        uses: codecov/codecov-action@v4.3.0
        with:
          file: profile.api.test-integration.cov
          name: api-test-integration
          flags: api-test-integration
          token: ${{ secrets.CODECOV_TOKEN }}