name: Compile

on:
  workflow_call:
    inputs:
      nx_cache_key:
        required: true
        type: string
      nx_cache_path:
        required: true
        type: string
      version:
        required: true
        type: string
      node_version:
        required: true
        type: string

jobs:
  executable:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]

    steps:
      - uses: actions/checkout@v4
        with:
          filter: tree:0
          fetch-depth: 0      
      - name: Set up pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
      - name: Install Nx
        run: pnpm add -g nx
      - name: Restore Nx cache
        uses: actions/cache/restore@v4
        id: nx_cache
        with:
          path: ${{ inputs.nx_cache_path }}
          key: ${{ inputs.nx_cache_key }}
          fail-on-cache-miss: true
          enableCrossOsArchive: true
      - name: compile
        timeout-minutes: 5
        run: |
          GOOS="${{matrix.goos}}" \
          GOARCH="${{matrix.goarch}}" \
          VERSION="${{ inputs.version }}" \
          COMMIT_SHA="${{ github.sha }}" \
          nx run @zitadel/api:build
      - name: create folder
        run: |
          mkdir zitadel-${{ matrix.goos }}-${{ matrix.goarch }}
          mv .artifacts/bin/${{ matrix.goos }}/${{ matrix.goarch }}/zitadel zitadel-${{ matrix.goos }}-${{ matrix.goarch }}/
          cp LICENSE zitadel-${{ matrix.goos }}-${{ matrix.goarch }}/
          cp README.md zitadel-${{ matrix.goos }}-${{ matrix.goarch }}/
          tar -czvf zitadel-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz zitadel-${{ matrix.goos }}-${{ matrix.goarch }}
      - uses: actions/upload-artifact@v4
        with:
          name: zitadel-${{ matrix.goos }}-${{ matrix.goarch }}
          path: zitadel-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz

  checksums:
    runs-on: ubuntu-latest
    needs: [executable]
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: executables
          pattern: 'zitadel-*-*'
      - name: move files one folder up
        run: mv */*.tar.gz . && find . -type d -empty -delete
        working-directory: executables
      - run: sha256sum * > checksums.txt
        working-directory: executables
      - uses: actions/upload-artifact@v4
        with:
          name: checksums.txt
          path: executables/checksums.txt
