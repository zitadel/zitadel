name: Release

on:
  workflow_call:
    inputs:
      go_version:
        required: true
        type: string
      node_version:
        required: true
        type: string
    secrets:
      APP_ID:
        description: 'GH App ID to request token for homebrew update'
        required: true
      APP_PRIVATE_KEY:
        description: 'GH App Private Key to request token for homebrew update'
        required: true

jobs:
  release:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          filter: tree:0
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ inputs.go_version }}
      - name: Set up pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node_version }}
          cache: "pnpm"
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: v0.28.0
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Release API and Login
        env:
          NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN || secrets.NX_CLOUD_ACCESS_TOKEN_READONLY }}
          ZITADEL_RELEASE_ORG: "${{ github.repository_owner }}"
        run: pnpm release --no-dry-run

#  homebrew-tap:
#    runs-on: ubuntu-22.04
#    needs: version
#    if: needs.version.outputs.published == 'true' && github.ref_name == 'next'
#    continue-on-error: true
#    steps:
#    - name: generate token
#      uses: tibdex/github-app-token@v2
#      id: generate-token
#      with:
#        app_id: ${{ secrets.APP_ID }}
#        private_key: ${{ secrets.APP_PRIVATE_KEY }}
#    - name: Trigger Homebrew
#      env:
#        VERSION: ${{ needs.version.outputs.version }}
#        RUN_ID: ${{ github.run_id }}
#        GH_TOKEN: ${{ steps.generate-token.outputs.token }}
#      run: |
#        gh workflow -R zitadel/homebrew-tap run update.yml -f runId=${RUN_ID} -f version=${VERSION}

#  helm-chart:
#    runs-on: ubuntu-22.04
#    needs: version
#    if: needs.version.outputs.published == 'true' && github.ref_name == 'next'
#    continue-on-error: true
#    steps:
#      - name: generate token
#        uses: tibdex/github-app-token@v2
#        id: generate-token
#        with:
#          app_id: ${{ secrets.APP_ID }}
#          private_key: ${{ secrets.APP_PRIVATE_KEY }}
#      - name: Trigger Chart Bump
#        env:
#          VERSION: ${{ needs.version.outputs.version }}
#          RUN_ID: ${{ github.run_id }}
#          GH_TOKEN: ${{ steps.generate-token.outputs.token }}
#        run: |
#          gh workflow -R zitadel/zitadel-charts run bump.yml

