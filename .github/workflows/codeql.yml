name: "Code Scanning"

on:
  push:
    branches:
    -  'main'
    paths-ignore:
    - 'docs/**'
  pull_request:
    # The branches below must be a subset of the branches above
    branches:
    -  'main'
    paths-ignore:
    - 'docs/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  nx_cache_path: .nx

jobs:
  CodeQL-Build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        language: [go,javascript]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - if: matrix.language == 'go'
      name: Install Go
      uses: actions/setup-go@v5
      with:
        go-version-file: go.mod
    # node to install sass for go
    - if: matrix.language == 'go'
      name: Set up pnpm
      uses: pnpm/action-setup@v4
    - name: Restore Nx cache
      if: matrix.language == 'go'
      uses: actions/cache/restore@v4
      id: nx_cache
      with:
        path: ${{ env.nx_cache_path }}
        # It includes the repository owner to prevent cache poisoning from forks.
        # We restore caches from previous commits on the HEAD branch, then we fall back to caches from the base.
        key: nx-codeql-${{ github.event.pull_request.base.ref || github.ref_name }}-${{ github.head_ref || github.ref_name }}-${{ github.repository_owner }}
        enableCrossOsArchive: true
        restore-keys: |
          nx-codeql-${{ github.event.pull_request.base.ref || github.ref_name }}-${{ github.head_ref || github.ref_name }}-
          nx-codeql-${{ github.event.pull_request.base.ref || github.ref_name }}-
    - if: matrix.language == 'go'    
      run: |
        pnpm fetch --dev
        pnpm add --prefer-offline --global sass nx
        nx run-many --projects @zitadel/api --targets generate-stubs generate-statik generate-assets
    - uses: actions/cache/save@v4
      if: matrix.language == 'go'
      with:
        key: ${{ steps.nx_cache.outputs.cache-primary-key }}
        path: ${{ env.nx_cache_path }}
    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      # Override language selection by uncommenting this and choosing your languages
      with:
        languages: ${{ matrix.language }}
        debug: true
    # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).
    # If this step fails, then you should remove it and run the build manually (see below)
    # - name: Autobuild
    #  uses: github/codeql-action/autobuild@v2
    # ‚ÑπÔ∏è Command-line programs to run using the OS shell.
    # üìö https://git.io/JvXDl
    # ‚úèÔ∏è If the Autobuild fails above, remove it and uncomment the following three lines
    #    and modify them (or add more) to build your code if your project
    #    uses a compiled language

    # autobuild does not work anymore
    # and to be able to compile without an actual console build, we just need a placeholder in the console dist folder
    - name: Autobuild
      uses: github/codeql-action/autobuild@v3
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
