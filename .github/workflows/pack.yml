name: Package und Publish Archives and Images

on:
  workflow_call:
    inputs:
      node_version:
        required: true
        type: string
      zitadel_version:
        required: true
        type: string
      image_name_github_api:
        required: true
        type: string
      image_name_github_login:
        required: true
        type: string
      image_name_google_api:
        required: true
        type: string
      image_name_google_login:
        required: true
        type: string
    secrets:
      GCR_JSON_KEY_BASE64:
        description: 'base64 endcrypted key to connect to Google'
        required: true

permissions:
  packages: write

env:
  nx_cache_path: .nx
  default_labels: |
    org.opencontainers.image.documentation=https://zitadel.com/docs
    org.opencontainers.image.vendor=CAOS AG

jobs:
  api:
    name: api
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          filter: tree:0
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
      - name: Set up pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node_version }}
          cache: "pnpm"
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: v0.28.0
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Restore Nx cache
        uses: actions/cache/restore@v4
        id: nx_cache
        with:
          path: ${{ env.nx_cache_path }}
          # It includes the repository owner to prevent cache poisoning from forks.
          # We restore caches from previous commits on the HEAD branch, then we fall back to caches from the base.
          key: nx-pack-${{ github.event.pull_request.base.ref || github.ref_name }}-${{ github.head_ref || github.ref_name }}-${{ github.repository_owner }}-${{ github.sha }}
          enableCrossOsArchive: true
          restore-keys: |
            nx-pack-${{ github.event.pull_request.base.ref || github.ref_name }}-${{ github.head_ref || github.ref_name }}-${{ github.repository_owner }}-
            nx-pack-${{ github.event.pull_request.base.ref || github.ref_name }}-${{ github.head_ref || github.ref_name }}-
            nx-pack-${{ github.event.pull_request.base.ref || github.ref_name }}-
      - name: Install global modules
        run: pnpm add -g nx sass
      - name: Pack API and Login
        env:
          ZITADEL_VERSION: ${{ inputs.zitadel_version }}
        run: nx run pack
      - uses: actions/cache/save@v4
        if: always()
        with:
          key: ${{ steps.nx_cache.outputs.cache-primary-key }}
          path: ${{ env.nx_cache_path }}
      - name: Upload all platform archives
        uses: actions/upload-artifact@v4
        with:
          name: zitadel-archives
          path: .artifacts/pack
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Login to Google Artifact Registry
        uses: docker/login-action@v3
        with:
          registry: europe-docker.pkg.dev
          username: _json_key_base64
          password: ${{ secrets.GCR_JSON_KEY_BASE64 }}
      - name: API Scratch Image Meta
        id: scratch-meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ inputs.image_name_github_api }}
            ${{ inputs.image_name_google_api }}
          labels: ${{ env.default_labels}}
          tags: |
            type=sha,prefix=,suffix=,format=long
      - name: API Scratch Image Build and Push
        id: build-scratch
        uses: docker/build-push-action@v6
        timeout-minutes: 3
        with:
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max
          file: apps/api/Dockerfile
          target: final
          platforms: linux/amd64,linux/arm64
          push: true
          labels: ${{ steps.scratch-meta.outputs.labels }}
          tags: ${{ steps.scratch-meta.outputs.tags }}            
      - name: API Debug Image Meta
        id: debug-meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ inputs.image_name_github_api }}
            ${{ inputs.image_name_google_api }}
          labels: ${{ env.default_labels}}
          tags: |
            type=sha,prefix=,suffix=-debug,format=long            
      - name: API Debug Image Build and Push
        id: build-debug
        uses: docker/build-push-action@v6
        timeout-minutes: 5
        with:
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max
          file: apps/api/Dockerfile
          target: artifact
          platforms: linux/amd64,linux/arm64
          push: true
          labels: ${{ steps.debug-meta.outputs.labels }}
          tags: ${{ steps.debug-meta.outputs.tags }}
          outputs: type=image,name=${{ inputs.image_name_github_api }},name-canonical=true
      - name: Login Image Meta
        id: login-meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ inputs.image_name_github_login }}
            ${{ inputs.image_name_google_login }}
          labels: |
            org.opencontainers.image.licenses=MIT
            ${{ env.default_labels}}
          tags: |
            type=sha,prefix=,suffix=,format=long
      - name: Login Image Build and Push
        id: build-login
        uses: docker/build-push-action@v6
        timeout-minutes: 3
        with:
          context: apps/login
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64
          push: true
          labels: ${{ steps.login-meta.outputs.labels }}
          tags: ${{ steps.login-meta.outputs.tags }}
