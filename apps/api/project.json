{
    "$schema": "../../node_modules/nx/schemas/project-schema.json",
    "name": "@zitadel/api",
    "projectType": "application",
    "targets": {
        "build": {
            "description": "Build the Zitadel API application",
            "dependsOn": [
                "generate"
            ],
            "command": "make compile_pipeline",
            "inputs": [
                { "runtime": "go env GOOS" },
                { "runtime": "go env GOARCH" },
                "{workspaceRoot}/cmd/**/*.go",
                "{workspaceRoot}/internal/**/*.go",
                "{workspaceRoot}/proto/**/*.go",
                "{workspaceRoot}/pkg/**/*.go",
                "{workspaceRoot}/go*",
                "{workspaceRoot}/main.go",
                "{workspaceRoot}/Makefile",
                "!{workspaceRoot}/internal/integration/**",
                "!{workspaceRoot}/**/*_test.go",
                "!{workspaceRoot}/**/integration_test/**/*"
            ],
            "outputs": [
                "{workspaceRoot}/.artifacts/bin/*/*/zitadel"
            ]
        },
        "generate": {
            "dependsOn": [
                "@zitadel/console:build"
            ],
            "description": "Generate the code needed to start the API",
            "command": "make api_build && make console_move",
            "inputs": [
                "{workspaceRoot}/go.*",
                "{workspaceRoot}/openapi/**/*",
                "{workspaceRoot}/cmd/**/*", 
                "{workspaceRoot}/pkg/grpc/**/*.go", 
                "{workspaceRoot}/proto/**/*",
                "{workspaceRoot}/internal/**/*",
                "{workspaceRoot}/backend/**/*"
            ],
            "outputs": [
                "{workspaceRoot}/internal/statik/statik.go",
                "{workspaceRoot}/internal/notification/statik/statik.go",
                "{workspaceRoot}/internal/api/ui/login/static/resources/themes/zitadel/css/zitadel.css*",
                "{workspaceRoot}/internal/api/ui/login/statik/statik.go",
                "{workspaceRoot}/internal/api/assets/authz.go",
                "{workspaceRoot}/internal/api/assets/router.go",
                "{workspaceRoot}/internal/api/ui/console/static",
                "{workspaceRoot}/openapi/v2",
                "{workspaceRoot}/pkg/grpc/**/*.pb.*",
                "{workspaceRoot}/pkg/grpc/**/*.connect.go"
            ]
        },
        "prod": {
            "continuous": true,
            "dependsOn": [
                "build"
            ],
            "options": {
                "env": {
                    "API_CONFIG_FILE": "{projectRoot}/api.yaml"
                }
            },
            "command": "bash -c 'for i in {1..5}; do echo \"Attempt $i/5: Starting ZITADEL...\"; ./.artifacts/${GOOS:-$(go env GOOS)}/${GOARCH:-$(go env GOARCH)}/zitadel start-from-init --config ${API_CONFIG_FILE} --steps ${API_CONFIG_FILE} --masterkey MasterkeyNeedsToHave32Characters && break || (echo \"Failed, retrying in 2s...\" && sleep 2); done'"
        }
    }
}