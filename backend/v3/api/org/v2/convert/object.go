package convert

import (
	v2_object "github.com/zitadel/zitadel/pkg/grpc/object/v2"
	v2beta_object "github.com/zitadel/zitadel/pkg/grpc/object/v2beta"
)

func TextQueryMethodBetaToV2(txtMethod v2beta_object.TextQueryMethod) v2_object.TextQueryMethod {
	switch txtMethod {
	case v2beta_object.TextQueryMethod_TEXT_QUERY_METHOD_CONTAINS:
		return v2_object.TextQueryMethod_TEXT_QUERY_METHOD_CONTAINS
	case v2beta_object.TextQueryMethod_TEXT_QUERY_METHOD_CONTAINS_IGNORE_CASE:
		return v2_object.TextQueryMethod_TEXT_QUERY_METHOD_CONTAINS_IGNORE_CASE
	case v2beta_object.TextQueryMethod_TEXT_QUERY_METHOD_ENDS_WITH:
		return v2_object.TextQueryMethod_TEXT_QUERY_METHOD_ENDS_WITH
	case v2beta_object.TextQueryMethod_TEXT_QUERY_METHOD_ENDS_WITH_IGNORE_CASE:
		return v2_object.TextQueryMethod_TEXT_QUERY_METHOD_ENDS_WITH_IGNORE_CASE
	case v2beta_object.TextQueryMethod_TEXT_QUERY_METHOD_EQUALS_IGNORE_CASE:
		return v2_object.TextQueryMethod_TEXT_QUERY_METHOD_EQUALS_IGNORE_CASE
	case v2beta_object.TextQueryMethod_TEXT_QUERY_METHOD_STARTS_WITH:
		return v2_object.TextQueryMethod_TEXT_QUERY_METHOD_STARTS_WITH
	case v2beta_object.TextQueryMethod_TEXT_QUERY_METHOD_STARTS_WITH_IGNORE_CASE:
		return v2_object.TextQueryMethod_TEXT_QUERY_METHOD_STARTS_WITH_IGNORE_CASE
	case v2beta_object.TextQueryMethod_TEXT_QUERY_METHOD_EQUALS:
		fallthrough
	default:
		return v2_object.TextQueryMethod_TEXT_QUERY_METHOD_EQUALS
	}
}
