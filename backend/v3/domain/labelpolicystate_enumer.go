// Code generated by "enumer -type LabelPolicyState -transform snake -trimprefix LabelPolicyState"; DO NOT EDIT.

package domain

import (
	"fmt"
	"strings"
)

const _LabelPolicyStateName = "activeremovedpreview"

var _LabelPolicyStateIndex = [...]uint8{0, 6, 13, 20}

const _LabelPolicyStateLowerName = "activeremovedpreview"

func (i LabelPolicyState) String() string {
	i -= 1
	if i < 0 || i >= LabelPolicyState(len(_LabelPolicyStateIndex)-1) {
		return fmt.Sprintf("LabelPolicyState(%d)", i+1)
	}
	return _LabelPolicyStateName[_LabelPolicyStateIndex[i]:_LabelPolicyStateIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _LabelPolicyStateNoOp() {
	var x [1]struct{}
	_ = x[LabelPolicyStateActive-(1)]
	_ = x[LabelPolicyStateRemoved-(2)]
	_ = x[LabelPolicyStatePreview-(3)]
}

var _LabelPolicyStateValues = []LabelPolicyState{LabelPolicyStateActive, LabelPolicyStateRemoved, LabelPolicyStatePreview}

var _LabelPolicyStateNameToValueMap = map[string]LabelPolicyState{
	_LabelPolicyStateName[0:6]:        LabelPolicyStateActive,
	_LabelPolicyStateLowerName[0:6]:   LabelPolicyStateActive,
	_LabelPolicyStateName[6:13]:       LabelPolicyStateRemoved,
	_LabelPolicyStateLowerName[6:13]:  LabelPolicyStateRemoved,
	_LabelPolicyStateName[13:20]:      LabelPolicyStatePreview,
	_LabelPolicyStateLowerName[13:20]: LabelPolicyStatePreview,
}

var _LabelPolicyStateNames = []string{
	_LabelPolicyStateName[0:6],
	_LabelPolicyStateName[6:13],
	_LabelPolicyStateName[13:20],
}

// LabelPolicyStateString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func LabelPolicyStateString(s string) (LabelPolicyState, error) {
	if val, ok := _LabelPolicyStateNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _LabelPolicyStateNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to LabelPolicyState values", s)
}

// LabelPolicyStateValues returns all values of the enum
func LabelPolicyStateValues() []LabelPolicyState {
	return _LabelPolicyStateValues
}

// LabelPolicyStateStrings returns a slice of all String values of the enum
func LabelPolicyStateStrings() []string {
	strs := make([]string, len(_LabelPolicyStateNames))
	copy(strs, _LabelPolicyStateNames)
	return strs
}

// IsALabelPolicyState returns "true" if the value is listed in the enum definition. "false" otherwise
func (i LabelPolicyState) IsALabelPolicyState() bool {
	for _, v := range _LabelPolicyStateValues {
		if i == v {
			return true
		}
	}
	return false
}
