// Code generated by "enumer -type Key -transform snake -trimprefix Key"; DO NOT EDIT.

package feature

import (
	"fmt"
	"strings"
)

const (
	_KeyName_0      = "unspecifiedlogin_default_orgtrigger_introspection_projections"
	_KeyLowerName_0 = "unspecifiedlogin_default_orgtrigger_introspection_projections"
	_KeyName_1      = "user_schematoken_exchangeactions_deprecatedimproved_performanceweb_keydebug_oidc_parent_erroroidc_single_v1_session_terminationdisable_user_token_eventenable_back_channel_logoutlogin_v2permission_check_v2console_use_v2_user_api"
	_KeyLowerName_1 = "user_schematoken_exchangeactions_deprecatedimproved_performanceweb_keydebug_oidc_parent_erroroidc_single_v1_session_terminationdisable_user_token_eventenable_back_channel_logoutlogin_v2permission_check_v2console_use_v2_user_api"
)

var (
	_KeyIndex_0 = [...]uint8{0, 11, 28, 61}
	_KeyIndex_1 = [...]uint8{0, 11, 25, 43, 63, 70, 93, 127, 151, 177, 185, 204, 227}
)

func (i Key) String() string {
	switch {
	case 0 <= i && i <= 2:
		return _KeyName_0[_KeyIndex_0[i]:_KeyIndex_0[i+1]]
	case 4 <= i && i <= 15:
		i -= 4
		return _KeyName_1[_KeyIndex_1[i]:_KeyIndex_1[i+1]]
	default:
		return fmt.Sprintf("Key(%d)", i)
	}
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _KeyNoOp() {
	var x [1]struct{}
	_ = x[KeyUnspecified-(0)]
	_ = x[KeyLoginDefaultOrg-(1)]
	_ = x[KeyTriggerIntrospectionProjections-(2)]
	_ = x[KeyUserSchema-(4)]
	_ = x[KeyTokenExchange-(5)]
	_ = x[KeyActionsDeprecated-(6)]
	_ = x[KeyImprovedPerformance-(7)]
	_ = x[KeyWebKey-(8)]
	_ = x[KeyDebugOIDCParentError-(9)]
	_ = x[KeyOIDCSingleV1SessionTermination-(10)]
	_ = x[KeyDisableUserTokenEvent-(11)]
	_ = x[KeyEnableBackChannelLogout-(12)]
	_ = x[KeyLoginV2-(13)]
	_ = x[KeyPermissionCheckV2-(14)]
	_ = x[KeyConsoleUseV2UserApi-(15)]
}

var _KeyValues = []Key{KeyUnspecified, KeyLoginDefaultOrg, KeyTriggerIntrospectionProjections, KeyUserSchema, KeyTokenExchange, KeyActionsDeprecated, KeyImprovedPerformance, KeyWebKey, KeyDebugOIDCParentError, KeyOIDCSingleV1SessionTermination, KeyDisableUserTokenEvent, KeyEnableBackChannelLogout, KeyLoginV2, KeyPermissionCheckV2, KeyConsoleUseV2UserApi}

var _KeyNameToValueMap = map[string]Key{
	_KeyName_0[0:11]:         KeyUnspecified,
	_KeyLowerName_0[0:11]:    KeyUnspecified,
	_KeyName_0[11:28]:        KeyLoginDefaultOrg,
	_KeyLowerName_0[11:28]:   KeyLoginDefaultOrg,
	_KeyName_0[28:61]:        KeyTriggerIntrospectionProjections,
	_KeyLowerName_0[28:61]:   KeyTriggerIntrospectionProjections,
	_KeyName_1[0:11]:         KeyUserSchema,
	_KeyLowerName_1[0:11]:    KeyUserSchema,
	_KeyName_1[11:25]:        KeyTokenExchange,
	_KeyLowerName_1[11:25]:   KeyTokenExchange,
	_KeyName_1[25:43]:        KeyActionsDeprecated,
	_KeyLowerName_1[25:43]:   KeyActionsDeprecated,
	_KeyName_1[43:63]:        KeyImprovedPerformance,
	_KeyLowerName_1[43:63]:   KeyImprovedPerformance,
	_KeyName_1[63:70]:        KeyWebKey,
	_KeyLowerName_1[63:70]:   KeyWebKey,
	_KeyName_1[70:93]:        KeyDebugOIDCParentError,
	_KeyLowerName_1[70:93]:   KeyDebugOIDCParentError,
	_KeyName_1[93:127]:       KeyOIDCSingleV1SessionTermination,
	_KeyLowerName_1[93:127]:  KeyOIDCSingleV1SessionTermination,
	_KeyName_1[127:151]:      KeyDisableUserTokenEvent,
	_KeyLowerName_1[127:151]: KeyDisableUserTokenEvent,
	_KeyName_1[151:177]:      KeyEnableBackChannelLogout,
	_KeyLowerName_1[151:177]: KeyEnableBackChannelLogout,
	_KeyName_1[177:185]:      KeyLoginV2,
	_KeyLowerName_1[177:185]: KeyLoginV2,
	_KeyName_1[185:204]:      KeyPermissionCheckV2,
	_KeyLowerName_1[185:204]: KeyPermissionCheckV2,
	_KeyName_1[204:227]:      KeyConsoleUseV2UserApi,
	_KeyLowerName_1[204:227]: KeyConsoleUseV2UserApi,
}

var _KeyNames = []string{
	_KeyName_0[0:11],
	_KeyName_0[11:28],
	_KeyName_0[28:61],
	_KeyName_1[0:11],
	_KeyName_1[11:25],
	_KeyName_1[25:43],
	_KeyName_1[43:63],
	_KeyName_1[63:70],
	_KeyName_1[70:93],
	_KeyName_1[93:127],
	_KeyName_1[127:151],
	_KeyName_1[151:177],
	_KeyName_1[177:185],
	_KeyName_1[185:204],
	_KeyName_1[204:227],
}

// KeyString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func KeyString(s string) (Key, error) {
	if val, ok := _KeyNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _KeyNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to Key values", s)
}

// KeyValues returns all values of the enum
func KeyValues() []Key {
	return _KeyValues
}

// KeyStrings returns a slice of all String values of the enum
func KeyStrings() []string {
	strs := make([]string, len(_KeyNames))
	copy(strs, _KeyNames)
	return strs
}

// IsAKey returns "true" if the value is listed in the enum definition. "false" otherwise
func (i Key) IsAKey() bool {
	for _, v := range _KeyValues {
		if i == v {
			return true
		}
	}
	return false
}
